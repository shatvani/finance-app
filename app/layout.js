import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { cookies } from "next/headers";
import Script from "next/script";
import { ThemeProvider } from "@/components/theme-provider";

export const dynamic = 'force-dynamic';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  const theme = (await cookies()).get("theme")?.value || "dark";
  const initialIsDark = theme === "dark"; // ha akarsz 'system'-et, itt lehetne mindig false, a no-flash úgyis beállítja a DOM-ot
  //const theme = useServerDarkMode();
  return (
    // <html lang="en" className={theme}>
    //   <body
    //     className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen flex flex-col`}
    //   >
    //     <CookiesProviderClient>
    //       {children}
    //     </CookiesProviderClient>
    //   </body>
    // </html>
    <html lang="hu" className={initialIsDark ? "dark" : ""} suppressHydrationWarning>
            <head>
        <Script id="theme-no-flash" strategy="beforeInteractive">{`
(function () {
  try {
    var m = document.cookie.match(/(?:^|; )theme=([^;]+)/);
    var theme = m ? decodeURIComponent(m[1]) : null;
    if (!theme) theme = 'dark';
    var prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    var isDark = theme === 'dark' || (theme === 'system' && prefersDark);
    document.documentElement.classList.toggle('dark', isDark);
  } catch (e) {}
})();
        `}</Script>
      </head>
      <body>
        <ThemeProvider initialTheme={theme} initialIsDark={initialIsDark}>
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
